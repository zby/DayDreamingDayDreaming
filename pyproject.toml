[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.dagster]
module_name = "daydreaming_dagster.definitions"

[project]
requires-python = ">=3.9"
name = "daydreaming-dagster"
readme = "README.md"
description = "Dagster pipeline for testing whether LLMs can reinvent Gwern's Daydreaming Loop concept"
dynamic = ["version"]
dependencies = [
    "ipython>=8.10",
    "jupyterlab>=3.0",
    "notebook",
    "scikit-learn~=1.5.1",
    "seaborn~=0.12.1",
    "openai>=1.0.0",
    "jinja2>=3.0.0",
    "pandas>=1.5.0",
    "dagster>=1.11.4",
    "dagster-webserver>=1.11.4",
    "pydantic>=2.0.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "antlr4-python3-runtime>=4.13.2",
    "tenacity>=8.0.0",
    "ratelimit>=2.2.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.4",
    "pytest-cov~=3.0",
    "pytest-mock>=1.7.1",
    "pytest-xdist[psutil]>=2.5",
]
dev = [
    "ruff>=0.5.3",
    "black>=25.1.0",
]

[tool.setuptools.dynamic]
version = {attr = "daydreaming_dagster.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["daydreaming_dagster*"]
namespaces = false

[tool.pytest.ini_options]
addopts = """
--cov-report term-missing \
--cov daydreaming_dagster \
--cov-fail-under 0
"""
testpaths = ["daydreaming_dagster_tests"]

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
show-fixes = true
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
]
ignore = ["E501"]  # Black takes care of line-too-long

[tool.ruff.format]
docstring-code-format = true