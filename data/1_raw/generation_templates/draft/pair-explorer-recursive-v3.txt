{% raw %}
# Concept Link Generation — (Pair Explorer + Late Commit + Link→Concept Lift)

**Role:** You are an expert in interdisciplinary synthesis and mechanism design.
**Goal:** For a small set of unordered concept pairs, explore multiple link options (both directions, several types), **score them**, **pick the best 1–2 per pair**, and then **fully elaborate** only the winners. Additionally, systematically lift successful mechanisms to new conceptual domains.

## Inputs

### The list of concepts:

{% endraw %}
{% for concept in concepts %}
**{{ concept.name }}**
{{ concept.content }}
---

{% endfor %}
{% raw %}


### Budgets (suggested)

**Pairs P ≤ 6**, **Options per pair S ≤ 5**, **Final links ≤ 8**.

---

## Global Production Rules

* Consider **unordered pairs {A,B}**; evaluate **both directions** (A→B, B→A).
* Across all *final* links: cover **≥3 different link types**; avoid near-duplicates.
* Include metrics that best support each link's credibility and usefulness.
* **Measurement precedence:** Before proposing comparative tests (A/B), establish that reliable metrics exist for the outcomes being compared. If no validated measurement exists, propose metric development first.
* **Mechanism ≤120 words**, **5–7 steps**, with a **named lever**.
* **Mappings optional (≤3)** and **must be referenced** in steps via **\[tag:…]**.
* Include examples when you can draw on real knowledge or plausible scenarios.
* If numbers are unsourced, mark *(hypothetical)*.

---

## Gates (Hard Filters)

* **Gate-A (problem words):** If an objective contains *dearth/lack/shortage/problem*, first **Reframe** it to a positive KPI.
* **Gate-B (units):** Any mapping with incompatible or **unused** units → regenerate or drop.
* **Gate-C (discipline):** Focus on one primary success indicator per link.
* **Gate-D (concreteness):** Include concrete examples when possible.
* **Gate-E (direction):** In **Constraint→Objective**, the target must be a **knob** (rate/budget/bound). If not, change type.
* **Gate-F (used-only mappings):** Every mapping must be referenced in a step via **\[tag:…]**.
* **Gate-G (pair non-redundancy):** For a given pair, do not select two winners with the **same type + same lever**.

---

## Link Types (pick exactly one per option)

* **Reframing / Problem Translation**
* **Constraint→Objective Import**
* **Mechanism Composition**
* **Feature Graft / Capability Transfer**
* **Structure-Preserving Analogy**

---

## Output Structure

### A) Pair Explorer (brief; for each unordered pair {A,B})

1. **Pair header:** `Pair {{i}}: {A, B}`

2. **Option Slate (≤5 options, both directions allowed).** Each option is a **stub** (≤6 lines):

   * **ID:** `[{{i}}-{{k}}]`
   * **Type & Direction:** e.g., *Mechanism Composition, A→B*
   * **Causal transfer (1 line):** …
   * **Objective (positive, controllable):** …
   * **Success indicator:** Describe how you would measure success for this link
   * **Lever (1–3 words):** e.g., *idle-time gating*
   * **Test approach:** How you would test this if you had the resources

3. **Score & Selection (per pair):**

   * **Rate the relative strengths and weaknesses** of each option considering: *Impact* (on objective), *Tractability*, *Clarity* (knob & lever), *Novelty*, *Risk*.
   * **Pick best 1–2 non-redundant winners** based on overall strength.
   * **Rationale (≤2 lines):** why these win over others.
   * **Winners:** list winning IDs (e.g., `[{{i}}-2], [{{i}}-4]`).

> Keep Pair Explorer terse. This section is for selection; the **full details come only for winners** below.

---

### B) Selected Links (expand only winners; one block per winner)

Use this exact format for each winner:

#### Link {{global\_idx}}: A → B

* **Type:** (Reframing | Constraint→Objective | Mechanism Composition | Feature Graft | Structure-Preserving Analogy)
* **Entry mode:** (Problem | Constraint | Mechanism | Asset | Metric | Anomaly | Analogy)
* **Causal transfer (1 line):** Because A has **\[lever L]**, we can do **\[operator O]** in B, which causes **\[measurable effect E]**.

<!-- Only include the subsection that matches the chosen Type. -->

<!-- Constraint→Objective (include both lines): -->

* **Constraint (source, inequality/resource):** …
* **Objective (target, positive & controllable):** maximize/minimize/keep **X** per **Y** with appropriate bounds …

<!-- Feature Graft: -->

* **Feature & interface (preconditions → outputs):** …
* **Integration point:** …

<!-- Structure-Preserving Analogy: -->

* **Mappings (≤3, only if used):**

  * \[tag\:S1] state\_x ↔ state\_y (with appropriate units)
  * \[tag\:Op] operator\_p ↔ operator\_q
  * \[tag\:Fb] feedback\_r ↔ metric\_m
* **Invariant preserved:** …

##### Mechanism (≤120 words, 5–7 steps; name the **lever**)

* **State vars (≤3):** {…}
* **Operators (≤3):** {…}

1. …
2. … **\[tag\:S1]**
3. …
4. …
5. …
   → **Primary indicator:** What would realistic timeframes and outcomes look like?

##### Test

* **Design:** Describe how you would test this if you had the resources.
* **Decision rule:** What would make you adopt or discard this approach?

##### Micro-example (≤3 lines, with numbers when available)

"Include examples when you can draw on real knowledge or plausible scenarios; focus on illustrating the mechanism rather than providing precise specifications." *(hypothetical if unsourced)*

##### Risks & falsifier (≤2 lines)

* **Main risks and how they might be addressed:** …
* **What would make you abandon this approach:** If key assumptions prove wrong or unintended consequences emerge.

##### One-sentence delta (≤25 words)

Plain-English payoff; no jargon.

---

## Round 3 — Link→Concept Lift (Mandatory)

**Purpose:** Systematically transfer proven mechanisms from successful links to new conceptual domains.

Produce **R ≥ max(2, ceil(0.3·L))** lifts.

Each lift must reference a parent link by ID **[Lk]** and a target concept **Cj**.

**Requirements:**
* At least **2 different transfer modes** across all lifts
* **Coherent metrics:** adapt or derive success indicators from the parent link appropriately
* **Testability:** every lift includes a concrete way to evaluate success

---

### Lift Format (use for each lift):

#### Lift: [Lk] → Cj

**Parent link (ID & 1-sentence delta):** …

**Why this concept? (≤2 bullets):** 
* (salient property/constraint that makes the lift non-trivial)
* …

**Transfer mode (pick 1):**
* **Mechanism Grafting** (reuse the operator/feedback from Lk in Cj)
* **Constraint→Objective Import** (treat a constraint from Lk as a goal inside Cj)  
* **Metric/Protocol Porting** (use Lk's measurement & test to steer Cj)
* **Pipeline Injection** (treat Lk's output as Cj's input stage)

**Mappings (succinct):**
* **State ↔** …
* **Operator ↔** …
* **Constraint ↔** …
* **Objective/feedback ↔** …
* **Invariant preserved ↔** …

**Expected effect (with units):** realistic baseline → target expectations and timeframe.

**Test plan:** How would you evaluate this systematically, including what would make you stop or continue?

**Risks & mitigations (≤2 bullets):** …

**Non-triviality check:** why this is more than "Cj → X" restatement.

---

### Lift Gates (auto-fail if any is missing)

* **Gate-L1:** References valid **[Lk]** and **Cj**
* **Gate-L2:** Transfer mode chosen and justified
* **Gate-L3:** Success indicators make sense in context
* **Gate-L4:** Test approach is concrete and evaluable
* **Gate-L5:** Non-triviality check demonstrates meaningful transfer

---

### Selection Summary (end of Round 3)

List top **2 lifts** with expected **value** and **test requirements**.

---

## Generation Workflow (what the model should do)

1. **Choose P unordered pairs {A,B}.** Prefer pairs with multiple plausible link types or clear constraint/knob structure.
2. For each pair, **generate an Option Slate** of up to S options (mix of types and directions).
3. **Evaluate and select 1–2 winners per pair**, honoring the Gates and non-redundancy.
4. **Emit the Pair Explorer** (concise) and then **expand only winners** using the Selected Links format.
5. **Round 3 Link→Concept Lift**: Systematically transfer mechanisms from winning links to target concepts using the mandatory lift format.
6. **Stop when quota satisfied** and type diversity (≥3 types overall) achieved.

---

## Scoring Approach for Lifts

Consider each lift on:
* **Specificity** (operators/levers named clearly)
* **Coherent adaptation** (parent→child relationship makes sense)
* **Testability** (clear way to evaluate success/failure)
* **Novelty** (not a trivial restatement)
* **Relevance** (improves the project objective)

---

## Evaluation Priorities

* **Impact:** Expected improvement on the stated objective.
* **Tractability:** Can this be tested with reasonable resources?
* **Clarity:** Is the mechanism and lever explicit and understandable?
* **Novelty:** Non-obvious compared to baseline approaches.
* **Risk management:** Are major risks identified with mitigation strategies?

---

### Example (format demo, domain-neutral)

#### Lift: [L2: "PFL → Data Reuse Rate↑"] → C7 ("Open Review Workflow")

**Parent link (ID & 1-sentence delta):** [L2] Progressive feedback loops increase data reuse effectiveness via systematic template refinement.

**Why this concept? (≤2 bullets):**
* Open review workflows generate reusable artifacts (templates, criteria, examples) that mirror PFL's reuse pattern
* Review quality degrades without systematic reuse of proven evaluation approaches

**Transfer mode:** Metric/Protocol Porting

**Mappings (succinct):**
* **Operator:** "template refinement" ↔ "review artifact improvement"
* **Feedback:** "reuse→quality→reuse" preserved
* **State:** "template library" ↔ "review artifact repository"

**Expected effect (with units):** review artifact reuse and quality improvements over 3-4 weeks of implementation.

**Test plan:** Small group implementation measuring artifact reuse rates and review consistency; stop if no improvement after month of use.

**Risks & mitigations (≤2 bullets):**
* Risk: Artifact quality varies. Mitigation: Quality gates on repository contributions.
* Risk: Adoption resistance. Mitigation: Start with volunteers and demonstrate value.

**Non-triviality check:** Imports the systematic refinement protocol from L2; not merely "do better reviews."

---

### Notes

* If both directions are strong **and non-overlapping** (e.g., *C→O* one way and *Feature Graft* the other), you may select **both**, provided Gate-G passes.
* If **no option** for a pair passes the Gates, **drop the pair** (don't force it).
* Keep Pair Explorer succinct; the **Selected Links** are the artifacts consumed by downstream essay/plan stages.
* **Link→Concept Lifts**: Systematic transfer of proven mechanisms enables meta-pattern discovery and higher-order innovation.
* Focus on conceptual substance and realistic applicability rather than artificial precision.

---

## ESSAY_SUMMARY_START

**Purpose:** Distill the most important insights for essay writers and strategic synthesis.

**Requirements:** ≤500 words total, focus on conceptual insights rather than implementation details.

### Key Insights
Synthesize the most important discoveries from the selected links and lifts. What are the main patterns or principles that emerged? Focus on the "why" and "what this means" rather than technical implementation.

### Cross-Domain Patterns  
What mechanisms or principles appear to work across multiple domains? Are there universal patterns in how constraints become opportunities, or how feedback loops amplify results?

### Practical Implications
What are the broader implications for innovation, business strategy, or system design? Focus on insights that could inform decision-making or strategic thinking beyond the specific examples.

## ESSAY_SUMMARY_END

{% endraw %}